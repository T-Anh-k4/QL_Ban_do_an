@{
    ViewData["Title"] = "GioHang";
    Layout = "~/Views/Shared/_LayoutOgani.cshtml";
}

@model IEnumerable<QLBH.Models.ProductModels.CartItem>
<div class="modal-cart open">
    <div class="cart-container">
        <div class="cart-header">
            <h3 class="cart-header-title"><i class="fa-regular fa-basket-shopping-simple"></i> Giỏ hàng</h3>
            <button class="cart-close exit" onclick="closeCart()"><i class="fa-sharp fa-solid fa-xmark"></i></button>
        </div>
        <div class="cart-body">
            @if (!Model.Any()) // Kiểm tra nếu giỏ hàng rỗng
            {
                <div class="gio-hang-trong" style="display: flex;">
                    <i class="fa-thin fa-cart-xmark"></i>
                    <p>Không có sản phẩm nào trong giỏ hàng của bạn</p>
                </div>
            }
            else
            {
                <ul class="cart-list">
                    @foreach (var item in Model) // Vòng lặp foreach để hiển thị các sản phẩm trong giỏ hàng
                    {
                        <li class="cart-item" data-id="@item.Mahh">
                            <div class="cart-item-info">
                                <p class="cart-item-title">
                                    @item.TenHH
                                </p>
                                <span class="cart-item-price total-price" data-cart_id="@item.Mahh">
                                    @String.Format("{0:N3}", item.dongia * item.SoLuong) đ<!-- Hiển thị giá với định dạng số -->
                                </span>
                            </div>
                            <p class="product-note"><i class="fa-light fa-pencil"></i><span>Không có ghi chú</span></p>
                            <div class="cart-item-control">
                                <a class="cart-item remove-cart" data-cart_id="@item.Mahh">
                                    <button class="cart-item-delete" onclick="deleteCartItem(@item.Mahh, this)">Xóa</button>
                                </a>
                                <div class="buttons_added">

                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
        </div>
        <div class="cart-footer">
            <div class="cart-total-price">
                <p class="text-tt">Tổng tiền:</p>
                <p class="text-price">
                    @String.Format("{0:N3}", Model.Sum(x => x.dongia * x.SoLuong))
                </p>
            </div>
            <div class="cart-footer-payment">
                <button class="them-mon"><i class="fa-regular fa-plus"></i> Thêm món</button>
                <button class="thanh-toan @(Model.Any() ? "" : "disabled")">Thanh toán</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.exit').click(function () {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Index", "Home")",
                    success: function (result) {
                        if (result) {
                            window.location.href = "@Url.Action("Index", "Home")";

                        }
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.remove-cart').click(function () {
                var id = $(this).data("cart_id");
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Remove", "Home")",
                    data: { Id: id },
                    success: function (result) {
                        if (result) {
                            $('.cart-item[data-id="' + id + '"]').remove();
                            location.reload();
                        }
                    }
                });
            });
        });
    </script>
    <script>
        function updateQuantity(productId, quantity) {
            // Gửi yêu cầu cập nhật số lượng sản phẩm lên server
            $.ajax({
                url: '@Url.Action("UpdateQuantity", "Home")',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    if (response.success) {
                        updateTotalPrice(productId); // Cập nhật lại giá tổng của sản phẩm
                        updateCartTotal(); // Cập nhật tổng giỏ hàng
                    } else {
                        alert("Cập nhật không thành công.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi xảy ra khi cập nhật số lượng: ", error);
                }
            });
        }
        function updateTotalPrice(productId) {
            const quantity = parseInt($(`.cart-item[data-id="${productId}"]`).find('.quantity').val());
            $.ajax({
                url: '@Url.Action("GetTotalPrice", "Home")',
                type: 'GET',
                data: { productId: productId, quantity: quantity },
                success: function (data) {
                    $(`.cart-item[data-id="${productId}"] .total-price`).text(data.totalPrice.toLocaleString('vi-VN'));
                    updateCartTotal(); // Gọi lại hàm để cập nhật tổng giỏ hàng
                },
                error: function () {
                    console.log("Error occurred while updating total price.");
                }
            });
        }
        function updateCartTotal() {
            let total = 0;
            $('.text-price').each(function () {
                const priceText = $(this).text().replace(/[^0-9]/g, ''); // Lấy giá trị số từ chuỗi
                total += parseInt(priceText) || 0; // Cộng dồn vào tổng
            });
            $('.text-price').text(total.toLocaleString('vi-VN') + ' ₫'); // Cập nhật tổng tiền
        }


    </script>
}

